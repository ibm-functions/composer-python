; a generative tox configuration, see: https://testrun.org/tox/latest/config.html#generative-envlist

[tox]
envlist =
    clean,
    check,
    # {py27,py33,py34,py35,py36,pypy},
    {py36},
    report

[testenv]
basepython =
    pypy: {env:TOXPYTHON:pypy}
    {py27}: {env:TOXPYTHON:python2.7}
    py33: {env:TOXPYTHON:python3.3}
    py34: {env:TOXPYTHON:python3.4}
    py35: {env:TOXPYTHON:python3.5}
    py36: {env:TOXPYTHON:python3.6}
    {bootstrap,clean,check,report,coveralls,codecov}: {env:TOXPYTHON:python3.6}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
    PIP_DISABLE_PIP_VERSION_CHECK=1
    VIRTUALENV_NO_DOWNLOAD=1

passenv =
    *
usedevelop = false
deps =
    pylint
    pytest
    pytest-travis-fold
    pytest-cov
    requests
    pyfakefs
commands =
    {posargs:py.test -s --cov --cov-report=term-missing -vv tests}

[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
commands =
    python ci/bootstrap.py

[testenv:check]
deps =
    pylint
    check-manifest
    flake8
    readme-renderer
    pygments
    isort
skip_install = true
commands =
    python setup.py check --strict --metadata
    check-manifest {toxinidir}

[testenv:coveralls]
deps =
    coveralls
skip_install = true
commands =
    coveralls []

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    coverage xml --ignore-errors
    codecov []


[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage combine --append
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

